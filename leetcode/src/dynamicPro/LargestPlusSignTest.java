package dynamicPro;

public class LargestPlusSignTest {
	public static void main( String[] args){
		int N = 20;
		int[][] a = {{0,0},{0,2},{0,5},{0,7},{0,8},{0,9},{0,10},{0,12},{0,19},{1,1},{1,2},{1,7},{1,8},{1,11},{1,14},{1,15},{1,16},{1,17},{1,18},{2,0},{2,4},{2,5},{2,8},{2,9},{2,11},{2,12},{2,14},{2,15},{2,19},{3,3},{3,4},{3,6},{3,8},{3,9},{3,11},{3,14},{3,15},{3,16},{3,18},{4,0},{4,6},{4,8},{4,9},{4,11},{4,12},{4,14},{4,15},{4,16},{4,17},{4,19},{5,2},{5,4},{5,6},{5,7},{5,8},{5,9},{5,12},{5,14},{5,19},{6,6},{6,10},{6,11},{6,12},{6,13},{6,15},{6,16},{6,18},{7,1},{7,2},{7,3},{7,5},{7,8},{7,11},{7,15},{7,16},{8,0},{8,2},{8,4},{8,5},{8,8},{8,9},{8,12},{8,13},{8,14},{8,15},{8,16},{8,19},{9,0},{9,1},{9,2},{9,3},{9,8},{9,9},{9,10},{9,11},{9,12},{9,14},{9,19},{10,0},{10,3},{10,5},{10,7},{10,8},{10,9},{10,11},{10,14},{10,15},{10,16},{10,17},{11,1},{11,4},{11,11},{11,13},{11,15},{11,16},{12,0},{12,3},{12,4},{12,12},{12,13},{12,16},{12,17},{13,1},{13,2},{13,3},{13,5},{13,7},{13,8},{13,9},{13,11},{13,15},{13,16},{13,17},{13,19},{14,0},{14,1},{14,6},{14,7},{14,9},{14,10},{14,13},{14,14},{14,19},{15,1},{15,5},{15,7},{15,9},{15,13},{15,14},{15,15},{15,16},{15,18},{15,19},{16,0},{16,1},{16,3},{16,4},{16,8}};
		LargestPlusSign app = new LargestPlusSign();
		app.orderOfLargestPlusSign(N, a);
/*		int[][] dp = new int[N][N];
        for(int i = 0; i <= N / 2; i++ ){
            for( int j = i; j < N - i; j++){
                dp[i][j] = i + 1;
                dp[j][i] = i + 1;
                dp[N - 1 - i][N - 1 - j] = i + 1;
                dp[N - 1 - j][N - 1 - i] = i + 1;
            }
        }*/
        
        /*for(int i = 0; i < N; i++){
        	for(int j = 0; j < N; j++){
        		System.out.print(dp[i][j] + "\t");
        	}
        	System.out.println("\n");
        }*/
	}

}
